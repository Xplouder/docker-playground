# Alpine Ticks: 
# - http://blog.zot24.com/tips-tricks-with-alpine-docker/
# - http://www.sandtable.com/reduce-docker-image-sizes-using-alpine/

# Based on Alpine 3.4
ARG PHP_VERSION=7.1.10
FROM php:${PHP_VERSION}-fpm-alpine

########################################################################################################################
# INIT #################################################################################################################

LABEL maintainer="Xplouder <jfasxx@hotmail.com>"

RUN apk update && apk upgrade

########################################################################################################################
# PHP EXTENSIONS #######################################################################################################
# ref: https://hub.docker.com/r/sinso/phpfpm-typo3/~/dockerfile/


# Imagick extension
# ref: https://github.com/docker-library/php/issues/105
RUN set -ex \
	&& apk add --no-cache imagemagick \
	&& apk add --no-cache --virtual imagick-deps $PHPIZE_DEPS imagemagick-dev libtool \
	&& export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS" \
	&& pecl install imagick-3.4.3 \
	&& docker-php-ext-enable imagick \
	&& apk del imagick-deps

# Intl extension
RUN set -ex \
	# Necessary lib to load Intl extension
	&& apk add --no-cache icu-libs \
	&& apk add --no-cache --virtual intl-deps icu-dev \
	&& docker-php-ext-install intl \
	&& apk del intl-deps


# Xdebug extension
# ref: https://hub.docker.com/r/zaherg/php-7.1-xdebug-alpine/~/dockerfile/
RUN set -ex \
	&& apk add --no-cache --virtual xdebug-deps autoconf freetype-dev g++ make gettext-dev \
	&& docker-php-source extract \
	&& pecl install xdebug \
	&& docker-php-ext-enable xdebug \
	&& docker-php-source delete \
	&& apk del xdebug-deps \
	# TODO: confirm these settings
	&& echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
	&& echo "xdebug.remote_autostart=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
	&& echo "xdebug.remote_connect_back=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Other extensions

RUN set -ex \
	# Necessary libs
	&& apk add --no-cache libmcrypt \
	&& apk add --no-cache --virtual other-deps libmcrypt-dev libxml2-dev libpng-dev libjpeg-turbo-dev\
	&& docker-php-ext-install mcrypt pdo_mysql soap zip mbstring iconv mysqli exif bcmath opcache pdo gd \
	&& apk del other-deps

# ######################################################################################################################
# # CLI TOOLS ##########################################################################################################
RUN apk add --no-cache vim nano git tree wget bash curl

# ######################################################################################################################
# # EXTRA LIBS #########################################################################################################

RUN apk add --no-cache openssh-client libmcrypt net-tools mysql-client

# Replace nodejs by nodejs-current when using a image based on Alpine 3.6  
RUN apk add --no-cache nodejs \
	&& curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# ######################################################################################################################
# # PHALCON ############################################################################################################
ARG PHALCON_VERSION=3.2.4

# https://hub.docker.com/r/npulidom/alpine-phalcon/~/dockerfile/
# Compile Phalcon
RUN set -xe \
	&& apk add --no-cache --virtual phalcon-deps libtool re2c pcre-dev file autoconf gcc make g++ \
	&& set -xe \
	&& curl -LO https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.tar.gz \
	&& tar xzf v${PHALCON_VERSION}.tar.gz \
	&& cd cphalcon-${PHALCON_VERSION}/build \
	&& sh ./install \
	&& docker-php-ext-enable phalcon \
	&& cd ../.. \
	&& rm -rf v${PHALCON_VERSION}.tar.gz cphalcon-${PHALCON_VERSION} \
	# Install Phalcon Devtools, see https://github.com/phalcon/phalcon-devtools/
	&& curl -LO https://github.com/phalcon/phalcon-devtools/archive/v${PHALCON_VERSION}.tar.gz \
	&& tar xzf v${PHALCON_VERSION}.tar.gz \
	&& mv phalcon-devtools-${PHALCON_VERSION} /usr/local/phalcon-devtools \
	&& ln -s /usr/local/phalcon-devtools/phalcon.php /usr/local/bin/phalcon \
	&& rm -rf v${PHALCON_VERSION}.tar.gz \
	&& apk del phalcon-deps

# ######################################################################################################################
# # Tweaks #############################################################################################################

WORKDIR /code

# Workaround for Linux develop environments -----------------------
ARG GROUP_USER_ID=0
ARG USER_ID=0
ARG USER_NAME=root
# Only run if the provided USER_ID arg is different of 0 (root)
RUN if [ "${USER_ID}" != "0" ]; then \
	set -xe \
	&& addgroup -g ${GROUP_USER_ID} -S ${USER_NAME} \
	&& adduser -u ${USER_ID} -D -S -G ${USER_NAME} ${USER_NAME} \
	&& mkdir -p /home/${USER_NAME} \
	&& chmod -R 777 /home/${USER_NAME} \
	&& chown -R ${USER_ID}:${GROUP_USER_ID} /home/${USER_NAME} \
	; fi
# -----------------------------------------------------------------

RUN rm -rf /tmp/* \
	&& rm -rf /var/cache/apk/* \
	&& rm -rf tmp/*
